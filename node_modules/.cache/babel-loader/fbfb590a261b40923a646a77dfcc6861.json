{"ast":null,"code":"var _jsxFileName = \"/media/hagen/daten/SHRIMP/Code/chatbot/src/App.js\";\nimport React from \"react\";\nimport Chatbot from \"./components/Chatbot\";\nconst data = [{\n  icon: \"userIcon\",\n  title: \"Shrimpy will help you!\",\n  timestamp: \"xxxxx\",\n  status: \"seen\",\n  id: \"channel0\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon2\",\n  title: \"You got another badge!\",\n  timestamp: \"oooooo\",\n  status: \"read\",\n  id: \"channel1\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel2\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel3\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel4\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel5\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel6\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel7\",\n  content: [{\n    dialogue: []\n  }]\n}, {\n  icon: \"userIcon3\",\n  title: \"What do you think?\",\n  timestamp: \"ppppp\",\n  status: \"seen\",\n  id: \"channel8\",\n  content: [{\n    dialogue: []\n  }]\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.activateChatbot = () => {\n      this.setState({\n        chatBotIsActive: true\n      });\n      console.log(this.state.chatBotIsActive);\n    };\n\n    this.state = {\n      chatBotIsActive: false\n    };\n  } // state = {\n  //   chatBotIsActive: false\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, this.state.chatBotIsActive ? React.createElement(Chatbot, {\n      data: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }) : React.createElement(ChatbotButton, {\n      activateChatbot: this.activateChatbot,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }));\n  }\n\n}\n\nfunction ChatbotButton(props) {\n  return React.createElement(\"button\", {\n    onClick: props.activateChatbot,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }, \" Chatbot \");\n}\n\nexport default App;","map":{"version":3,"sources":["/media/hagen/daten/SHRIMP/Code/chatbot/src/App.js"],"names":["React","Chatbot","data","icon","title","timestamp","status","id","content","dialogue","App","Component","constructor","props","activateChatbot","setState","chatBotIsActive","console","log","state","render","ChatbotButton"],"mappings":"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","sourcesContent":["import React from \"react\"\n\nimport Chatbot from \"./components/Chatbot\"\n\nconst data = [\n  {\n    icon: \"userIcon\",\n  \ttitle: \"Shrimpy will help you!\",\n  \ttimestamp: \"xxxxx\",\n  \tstatus: \"seen\",\n    id: \"channel0\",\n  \tcontent: [\n  \t\t{dialogue: []}\n  \t\t]\n  },\n  {\n    icon: \"userIcon2\",\n    title: \"You got another badge!\",\n    timestamp: \"oooooo\",\n    status: \"read\",\n    id: \"channel1\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel2\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel3\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel4\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel5\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel6\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel7\",\n    content: [\n      {dialogue: []}\n      ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    timestamp: \"ppppp\",\n    status: \"seen\",\n    id: \"channel8\",\n    content: [\n      {dialogue: []}\n      ]\n  }\n]\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props)\n    this.state = {\n      chatBotIsActive: false\n    }\n  }\n\n  // state = {\n  //   chatBotIsActive: false\n  // }\n\n  activateChatbot = () => {\n    this.setState({chatBotIsActive: true})\n    console.log(this.state.chatBotIsActive)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.chatBotIsActive ?\n          <Chatbot data={data}/> :\n          <ChatbotButton activateChatbot={this.activateChatbot}/>\n        }\n      </div>\n    )\n  }\n}\n\n\nfunction ChatbotButton (props) {\n  return (\n    <button onClick={props.activateChatbot}> Chatbot </button>\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}