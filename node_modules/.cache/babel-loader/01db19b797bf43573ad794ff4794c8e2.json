{"ast":null,"code":"var _jsxFileName = \"/media/hagen/daten/SHRIMP/Code/chatbot/src/components/Chatbot.js\";\nimport React from \"react\";\n\nfunction Chatbot(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, \"Chatbot\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Channels, {\n    channels: props.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(Chats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })));\n}\n\nfunction Channels(props) {\n  React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, props.channels.map((channel, index) => {\n    React.createElement(Channel, {\n      channel: props.channel[index],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    });\n  }));\n}\n\nfunction ChannelList(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Channel, {\n    channel: props.channels[0],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }));\n}\n\nconst Channel = props => React.createElement(\"button\", {\n  class: true,\n  \"channel-button\": true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 34\n  },\n  __self: this\n}, props.channel.title, \" || status: \", props.channel.status);\n\nfunction Chats() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Chats\"));\n}\n\nexport default Chatbot;","map":{"version":3,"sources":["/media/hagen/daten/SHRIMP/Code/chatbot/src/components/Chatbot.js"],"names":["React","Chatbot","props","data","Channels","channels","map","channel","index","ChannelList","Channel","title","status","Chats"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;AACvB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,QAAQ,EAAEA,KAAK,CAACC,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAJF,CADF;AAWD;;AAED,SAASC,QAAT,CAAmBF,KAAnB,EAA0B;AACxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACG,QAAN,CAAeC,GAAf,CAAmB,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACtC,wBAAC,OAAD;AAAS,MAAA,OAAO,EAAEN,KAAK,CAACK,OAAN,CAAcC,KAAd,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACD,GAFA,CADH;AAKD;;AAED,SAASC,WAAT,CAAsBP,KAAtB,EAA6B;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAEA,KAAK,CAACG,QAAN,CAAe,CAAf,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD;;AAED,MAAMK,OAAO,GAAGR,KAAK,IACnB;AAAQ,EAAA,KAAK,MAAb;AAAc,wBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGA,KAAK,CAACK,OAAN,CAAcI,KADjB,kBAEWT,KAAK,CAACK,OAAN,CAAcK,MAFzB,CADF;;AAOA,SAASC,KAAT,GAAkB;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF;AAOD;;AAED,eAAeZ,OAAf","sourcesContent":["import React from \"react\"\n\nfunction Chatbot (props) {\n  return (\n    <div>\n      <header>\n        Chatbot\n      </header>\n      <div>\n        <Channels channels={props.data}/>\n        <Chats />\n      </div>\n    </div>\n  )\n}\n\nfunction Channels (props) {\n  <ul>\n    {props.channels.map((channel, index) => {\n      <Channel channel={props.channel[index]}/>\n    })}\n  </ul>\n}\n\nfunction ChannelList (props) {\n  return (\n    <div>\n      <Channel channel={props.channels[0]}/>\n    </div>\n  )\n}\n\nconst Channel = props => (\n  <button class channel-button>\n    {props.channel.title} ||\n    status: {props.channel.status}\n  </button>\n)\n\nfunction Chats () {\n  return (\n    <div>\n      <header>\n        Chats\n      </header>\n    </div>\n  )\n}\n\nexport default Chatbot\n"]},"metadata":{},"sourceType":"module"}