{"ast":null,"code":"var _jsxFileName = \"/media/hagen/daten/SHRIMP/Code/chatbot/src/components/Chatbot.js\";\nimport React from \"react\";\nimport Flexbox from \"flexbox-react\";\nimport \"./Chatbot.css\";\n\nfunction Chatbot(props) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Flexbox, {\n    className: \"chatbot-flexbox\",\n    flexDirection: \"row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(Flexbox, {\n    className: \"channels-flexbox\",\n    flexGrow: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(Channels, {\n    channels: props.data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  })), React.createElement(Flexbox, {\n    className: \"chats-flexbox\",\n    flexGrow: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(Chats, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }))));\n}\n\nfunction Channels(props) {\n  const channels = props.channels;\n  const listChannels = channels.map((channel, index) => React.createElement(\"li\", {\n    key: channel.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(Channel, {\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), React.createElement(Channel, {\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), React.createElement(Channel, {\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(Channel, {\n    channel: channel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  })));\n  return React.createElement(Flexbox, {\n    className: \"channels\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"channel-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Channelheader\"), React.createElement(\"ul\", {\n    className: \"channel-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, listChannels));\n}\n\nconst Channel = props => React.createElement(\"button\", {\n  className: \"channel-button\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, props.channel.title), React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48\n  },\n  __self: this\n}, \"status: \", props.channel.status));\n\nfunction Chats() {\n  const items = [...Array(100)].map((val, i) => \"Item \".concat(i));\n  return React.createElement(Flexbox, {\n    className: \"chats\",\n    flexDirection: \"column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"chat-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Chatheader\"), React.createElement(\"div\", {\n    className: \"chat-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, items.map((item, i) => React.createElement(\"li\", {\n    key: \"item_\".concat(i),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, item)))), React.createElement(\"div\", {\n    className: \"chat-textfield\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Textfield\"));\n}\n\nexport default Chatbot;","map":{"version":3,"sources":["/media/hagen/daten/SHRIMP/Code/chatbot/src/components/Chatbot.js"],"names":["React","Flexbox","Chatbot","props","data","Channels","channels","listChannels","map","channel","index","id","Channel","title","status","Chats","items","Array","val","i","item"],"mappings":"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","sourcesContent":["import React from \"react\"\nimport Flexbox from \"flexbox-react\"\n\nimport \"./Chatbot.css\"\n\nfunction Chatbot (props) {\n  return (\n    <div>\n      <Flexbox className=\"chatbot-flexbox\" flexDirection=\"row\">\n        <Flexbox className=\"channels-flexbox\" flexGrow={1}>\n          <Channels channels={props.data}/>\n        </Flexbox>\n        <Flexbox className=\"chats-flexbox\" flexGrow={5}>\n          <Chats />\n        </Flexbox>\n      </Flexbox>\n    </div>\n  )\n}\n\nfunction Channels (props) {\n  const channels = props.channels\n  const listChannels = channels.map((channel, index) =>\n    <li key={channel.id}>\n      <Channel channel={channel} />\n      <Channel channel={channel} />\n      <Channel channel={channel} />\n      <Channel channel={channel} />\n    </li>\n  )\n  return (\n    <Flexbox className=\"channels\" flexDirection=\"column\">\n      <div className=\"channel-header\">\n        Channelheader\n      </div>\n      <ul className=\"channel-list\">\n        {listChannels}\n      </ul>\n    </Flexbox>\n  )\n}\n\nconst Channel = props => (\n  <button className=\"channel-button\">\n    <div>\n      {props.channel.title}\n    </div>\n    <div>\n      status: {props.channel.status}\n    </div>\n  </button>\n)\n\nfunction Chats () {\n  const items = [...Array(100)].map((val, i) => `Item ${i}`)\n  return (\n    <Flexbox className=\"chats\" flexDirection=\"column\">\n      <div className=\"chat-header\">\n        Chatheader\n      </div>\n      <div className=\"chat-list\">\n        <ul>\n          {items.map((item, i) => (<li key={`item_${i}`}>{ item }</li>))}\n        </ul>\n      </div>\n      <div className=\"chat-textfield\">\n        Textfield\n      </div>\n    </Flexbox>\n  )\n}\n\nexport default Chatbot\n"]},"metadata":{},"sourceType":"module"}