{"ast":null,"code":"import _toConsumableArray from\"/media/hagen/daten/SHRIMP/Code/chatbot/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/media/hagen/daten/SHRIMP/Code/chatbot/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/media/hagen/daten/SHRIMP/Code/chatbot/node_modules/@babel/runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"/media/hagen/daten/SHRIMP/Code/chatbot/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"/media/hagen/daten/SHRIMP/Code/chatbot/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";import _inherits from\"/media/hagen/daten/SHRIMP/Code/chatbot/node_modules/@babel/runtime/helpers/esm/inherits\";import React from\"react\";import Flexbox from\"flexbox-react\";import\"./Chats.css\";var Chats=/*#__PURE__*/function(_React$Component){_inherits(Chats,_React$Component);function Chats(){var _getPrototypeOf2;var _this;_classCallCheck(this,Chats);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Chats)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.getInput=function(e){e.preventDefault();var chatInput=e.target.elements.chatInput.value;console.log(chatInput);};return _this;}_createClass(Chats,[{key:\"render\",value:function render(){return React.createElement(Flexbox,{className:\"chats\",flexDirection:\"column\"},React.createElement(Chatheader,{toggleChatbot:this.props.toggleChatbot,activeChannel:this.props.activeChannel}),React.createElement(Chatdialog,{activeChannel:this.props.activeChannel}),React.createElement(Chattextfield,{getInput:this.getInput}));}}]);return Chats;}(React.Component);var Chatheader=function Chatheader(props){return React.createElement(Flexbox,{className:\"chat-header\",flexDirection:\"row\"},React.createElement(Flexbox,{className:\"chat-header-title\",flexGrow:1},props.activeChannel.title),React.createElement(Flexbox,{className:\"chat-header-button\"},React.createElement(\"button\",{onClick:props.toggleChatbot},\" Exit Chatbot \")));};function Chatdialog(props){var dialogue=0;if(props.activeChannel){dialogue=props.activeChannel.content[0].dialogue;}var items=_toConsumableArray(Array(dialogue)).map(function(val,i){return\"Item \".concat(i);});return React.createElement(\"div\",{className:\"chat-list\"},React.createElement(\"ul\",null,items.map(function(item,i){return React.createElement(\"li\",{key:\"item_\".concat(i)},item);})));}function Chattextfield(props){return React.createElement(\"form\",{onSubmit:props.getInput,className:\"chat-textfield-form\"},React.createElement(Flexbox,{className:\"chat-textfield\",flexDirection:\"row\"},React.createElement(Flexbox,{flexGrow:1},React.createElement(\"input\",{type:\"text\",name:\"chatInput\",className:\"chat-input\"})),React.createElement(\"button\",{className:\"chat-input-button\"},\" Send \")));}export default Chats;","map":{"version":3,"sources":["/media/hagen/daten/SHRIMP/Code/chatbot/src/components/Chats.js"],"names":["React","Flexbox","Chats","getInput","e","preventDefault","chatInput","target","elements","value","console","log","props","toggleChatbot","activeChannel","Component","Chatheader","title","Chatdialog","dialogue","content","items","Array","map","val","i","item","Chattextfield"],"mappings":"4uBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,eAApB,CAEA,MAAO,aAAP,C,GAEMC,CAAAA,K,uYACJC,Q,CAAW,SAACC,CAAD,CAAO,CAChBA,CAAC,CAACC,cAAF,GACA,GAAMC,CAAAA,SAAS,CAAGF,CAAC,CAACG,MAAF,CAASC,QAAT,CAAkBF,SAAlB,CAA4BG,KAA9C,CACAC,OAAO,CAACC,GAAR,CAAYL,SAAZ,EACD,C,wEAEQ,CACP,MACE,qBAAC,OAAD,EAAS,SAAS,CAAC,OAAnB,CAA2B,aAAa,CAAC,QAAzC,EACE,oBAAC,UAAD,EAAY,aAAa,CAAE,KAAKM,KAAL,CAAWC,aAAtC,CAAqD,aAAa,CAAE,KAAKD,KAAL,CAAWE,aAA/E,EADF,CAEE,oBAAC,UAAD,EAAY,aAAa,CAAE,KAAKF,KAAL,CAAWE,aAAtC,EAFF,CAGE,oBAAC,aAAD,EAAe,QAAQ,CAAE,KAAKX,QAA9B,EAHF,CADF,CAOD,C,mBAfiBH,KAAK,CAACe,S,EAkB1B,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAAAJ,KAAK,QACtB,qBAAC,OAAD,EAAS,SAAS,CAAC,aAAnB,CAAiC,aAAa,CAAC,KAA/C,EACE,oBAAC,OAAD,EAAS,SAAS,CAAC,mBAAnB,CAAuC,QAAQ,CAAE,CAAjD,EACGA,KAAK,CAACE,aAAN,CAAoBG,KADvB,CADF,CAIE,oBAAC,OAAD,EAAS,SAAS,CAAC,oBAAnB,EACE,8BAAQ,OAAO,CAAEL,KAAK,CAACC,aAAvB,mBADF,CAJF,CADsB,EAAxB,CAWA,QAASK,CAAAA,UAAT,CAAqBN,KAArB,CAA4B,CAC1B,GAAIO,CAAAA,QAAQ,CAAG,CAAf,CACA,GAAIP,KAAK,CAACE,aAAV,CAAyB,CACvBK,QAAQ,CAAGP,KAAK,CAACE,aAAN,CAAoBM,OAApB,CAA4B,CAA5B,EAA+BD,QAA1C,CACD,CACD,GAAIE,CAAAA,KAAK,CAAG,mBAAIC,KAAK,CAACH,QAAD,CAAT,EAAqBI,GAArB,CAAyB,SAACC,GAAD,CAAMC,CAAN,uBAAoBA,CAApB,GAAzB,CAAZ,CAEA,MACE,4BAAK,SAAS,CAAC,WAAf,EACE,8BACGJ,KAAK,CAACE,GAAN,CAAU,SAACG,IAAD,CAAOD,CAAP,QAAc,2BAAI,GAAG,gBAAUA,CAAV,CAAP,EAAwBC,IAAxB,CAAd,EAAV,CADH,CADF,CADF,CAOD,CAED,QAASC,CAAAA,aAAT,CAAwBf,KAAxB,CAA+B,CAC3B,MACE,6BAAM,QAAQ,CAAEA,KAAK,CAACT,QAAtB,CAAgC,SAAS,CAAC,qBAA1C,EACE,oBAAC,OAAD,EAAS,SAAS,CAAC,gBAAnB,CAAoC,aAAa,CAAC,KAAlD,EACE,oBAAC,OAAD,EAAS,QAAQ,CAAE,CAAnB,EACE,6BAAO,IAAI,CAAC,MAAZ,CAAmB,IAAI,CAAC,WAAxB,CAAoC,SAAS,CAAC,YAA9C,EADF,CADF,CAIE,8BAAQ,SAAS,CAAC,mBAAlB,WAJF,CADF,CADF,CAUH,CAGD,cAAeD,CAAAA,KAAf","sourcesContent":["import React from \"react\"\nimport Flexbox from \"flexbox-react\"\n\nimport \"./Chats.css\"\n\nclass Chats extends React.Component {\n  getInput = (e) => {\n    e.preventDefault()\n    const chatInput = e.target.elements.chatInput.value\n    console.log(chatInput)\n  }\n\n  render() {\n    return (\n      <Flexbox className=\"chats\" flexDirection=\"column\">\n        <Chatheader toggleChatbot={this.props.toggleChatbot} activeChannel={this.props.activeChannel}/>\n        <Chatdialog activeChannel={this.props.activeChannel}/>\n        <Chattextfield getInput={this.getInput} />\n      </Flexbox>\n    )\n  }\n}\n\nconst Chatheader = props => (\n  <Flexbox className=\"chat-header\" flexDirection=\"row\">\n    <Flexbox className=\"chat-header-title\" flexGrow={1}>\n      {props.activeChannel.title}\n    </Flexbox>\n    <Flexbox className=\"chat-header-button\">\n      <button onClick={props.toggleChatbot}> Exit Chatbot </button>\n    </Flexbox>\n  </Flexbox>\n)\n\nfunction Chatdialog (props) {\n  let dialogue = 0\n  if (props.activeChannel) {\n    dialogue = props.activeChannel.content[0].dialogue\n  }\n  let items = [...Array(dialogue)].map((val, i) => `Item ${i}`)\n\n  return (\n    <div className=\"chat-list\">\n      <ul>\n        {items.map((item, i) => (<li key={`item_${i}`}>{ item }</li>))}\n      </ul>\n    </div>\n  )\n}\n\nfunction Chattextfield (props) {\n    return (\n      <form onSubmit={props.getInput} className=\"chat-textfield-form\">\n        <Flexbox className=\"chat-textfield\" flexDirection=\"row\">\n          <Flexbox flexGrow={1}>\n            <input type=\"text\" name=\"chatInput\" className=\"chat-input\"/>\n          </Flexbox>\n          <button className=\"chat-input-button\"> Send </button>\n        </Flexbox>\n      </form>\n    )\n}\n\n\nexport default Chats\n"]},"metadata":{},"sourceType":"module"}