{"version":3,"sources":["components/Chats.js","components/Chatbot.js","App.js","index.js"],"names":["Chatdialog","props","contentList","activeChannel","content","map","item","type","key","id","Chatdialogbox","Chatdialogimage","console","log","className","container","author","text","timestamp","src","source","alt","Chats","this","React","Component","Chatbot","state","toggleChannel","clickedChannel","e","setState","toggleChatbot","Channels","channels","data","Chatheader","onClick","channelList","channel","index","Channelitem","channelButton","itemStatus","title","status","icon","ChatbotButton","App","chatBotIsActive","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0baceab3.chunk.js","sourcesContent":["import React from \"react\"\nimport \"./Chats.css\"\n\nclass Chats extends React.Component {\n  render() {\n    return (\n      <div className=\"chat\">\n        <div className=\"chat-dialog\">\n          <Chatdialog activeChannel={this.props.activeChannel}/>\n        </div>\n        <div className=\"chat-bottom\">\n\n        </div>\n      </div>\n    )\n  }\n}\n\nfunction Chatdialog (props) {\n  let contentList = false\n  if (props.activeChannel) {\n    const content = props.activeChannel.content\n    contentList = content.map(item =>\n      (item.type === \"text\") ?\n        <li key={item.id}>\n          <Chatdialogbox item={item}/>\n        </li>\n        :\n        (item.type === \"image\") ?\n        <li key={item.id}>\n          <Chatdialogimage item={item}/>\n        </li>\n        :\n        console.log(\"warning, missing content type: \" + item.type )\n    )\n  }\n  return (\n    <ul className=\"chat-dialog-list\">\n      {contentList}\n    </ul>\n  )\n}\n\nfunction Chatdialogbox (props) {\n  let container\n  let item = \"chat-item speech-bubble\"\n  if(props.item.author === \"shrimpy\") {\n    container = \"chat-container-left\"\n    item += \" speech-bubble-left\"\n  }\n  else {\n    container = \"chat-container-right\"\n    item += \" speech-bubble-right\"\n  }\n\n  return (\n    <div className={container}>\n      <div className={item}>\n        <div className=\"chat-item-text\">\n          {props.item.text}\n        </div>\n        <div className=\"chat-item-time\">\n          {props.item.timestamp}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction Chatdialogimage (props) {\n  return (\n    <div className=\"chat-container-left\">\n      <img className=\"chat-image\" src={props.item.source} alt={props.item.alt}/>\n    </div>\n  )\n}\n\n\n\nexport default Chats\n","import React from \"react\"\n\nimport \"./Chatbot.css\"\nimport Chats from \"./Chats\"\n\nclass Chatbot extends React.Component {\n  state = {\n      activeChannel: false\n  }\n\n  // use arrow function to get parameter from onCLick function\n  toggleChannel = clickedChannel => e => {\n    this.setState({activeChannel: clickedChannel})\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"chatbot\">\n          <div className=\"channel-header-container\">\n            Chatbot\n          </div>\n          <div className=\"chat-header-container\">\n            <Chatheader toggleChatbot={this.props.toggleChatbot} activeChannel={this.state.activeChannel}/>\n          </div>\n          <div className=\"channel-container\">\n            <Channels channels={this.props.data} toggleChannel={this.toggleChannel} activeChannel={this.state.activeChannel}/>\n          </div>\n          <div className=\"chat-container\">\n            <Chats toggleChatbot={this.props.toggleChatbot} activeChannel={this.state.activeChannel}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst Chatheader = props => (\n  <div className=\"chat-header\">\n    <div className=\"chat-header-title\">\n    </div>\n    <div className=\"chat-header-togglebutton\">\n      <button onClick={props.toggleChatbot}> Exit Chatbot </button>\n    </div>\n  </div>\n)\n\nfunction Channels (props) {\n  const channels = props.channels\n  const channelList = channels.map((channel, index) =>\n    <li key={channel.id}>\n      <Channelitem channel={channel} toggleChannel={props.toggleChannel} activeChannel={props.activeChannel} />\n    </li>\n  )\n  return (\n    <ul className=\"channel-list\">\n      {channelList}\n    </ul>\n  )\n}\n\nfunction Channelitem (props) {\n  let channelButton = \"channel-list-button\"\n  let itemStatus = \"channel-item-status\"\n  if (props.activeChannel.id === props.channel.id) {\n    channelButton += \" active\"\n    itemStatus += \" active\"\n  }\n\n  return (\n    <button className={channelButton} onClick={props.toggleChannel(props.channel)}>\n      <div className=\"channel-item-container\">\n        <div className={itemStatus} />\n        <div className=\"channel-item-image\">\n\n        </div>\n        <div className=\"channel-item-headline\">\n          {props.channel.title}\n        </div>\n        <div className=\"channel-item-time\">\n          time\n        </div>\n        <div className=\"channel-item-subline\">\n          subline\n        </div>\n        {props.channel.status===\"seen\" &&\n          <div className=\"channel-item-unread\">\n            unread\n          </div>\n        }\n\n      </div>\n    </button>\n  )\n}\n\nexport default Chatbot\n","import React from \"react\"\nimport Chatbot from \"./components/Chatbot\"\n\n\nconst data = [\n  {\n    icon: \"userIcon\",\n  \ttitle: \"Shrimpy will help you!\",\n  \tstatus: \"read\",\n    id: \"channel0\",\n  \tcontent: [\n  \t\t{\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Hallo hier ist Shrimpy!\",\n      \ttimestamp: \"11:20\",\n        id: \"shrimp_1\"\n      },\n      {\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Wie kann ich dir bei deinen Problemen helfen? Ich kann dir bei vielen Fragen zur Seite stehen. Zum Beispiel könnte ich dir die Bedienung erklären.\",\n        timestamp: \"11:20\",\n        id: \"shrimp_2\"\n      },\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Bitte hilf mir bei der Bedienung. Ich weiß nicht so recht, wie ich wieder zurück zum Hauptmenu komme.\",\n        timestamp: \"11:30\",\n        id: \"answer_1\"\n      },\n      {\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Aber gerne doch. Siehst du oben rechts den Button auf dem Exit Chatbot steht?\",\n        timestamp: \"13:20\",\n        id: \"shrimp_3\"\n      },\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Ja, den Button sehe ich.\",\n        timestamp: \"13:22\",\n        id: \"answer_2\"\n      },\n      {\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Wenn du darauf klickst, kommst du wieder zurück zu Shrimpy.\",\n        timestamp: \"13:25\",\n        id: \"shrimp_4\"\n      },\n      {\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Du kannst jederzeit in den Chatbot zurückkehren. Dafür musst du nur auf den Button Enter Chatbot klicken.\",\n        timestamp: \"13:26\",\n        id: \"shrimp_5\"\n      },\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Danke Shrimpy!\",\n        timestamp: \"15:02\",\n        id: \"answer_3\"\n      }\n  \t]\n  },\n  {\n    icon: \"userIcon2\",\n    title: \"You got another badge!\",\n    status: \"seen\",\n    id: \"channel1\",\n    content: [\n      {\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Shrimpy hier, Glückwunsch zu deinem neuen Badge :).\",\n      \ttimestamp: \"11:20\",\n        id: \"shrimp_1\"\n      },\n      {\n        type: \"image\",\n        author: \"shrimpy\",\n        source: \"https://http.cat/301\",\n        alt: \"cat picture\",\n        timestamp: \"11.21\",\n        id: \"shrimp_img1\"\n      },\n      {\n        type: \"text\",\n        text: \"Yeah, ich freue mich :).\",\n        author: \"user\",\n        timestamp: \"12.12\",\n        id: \"use_anw4\"\n      },\n      {\n        type: \"text\",\n        text: \"Nicht lange, dann wartet der nächste Badge auf dich. Es gibt viele Interaktionsmöglichkeiten mit dem Reader zu entdecken.\",\n        author: \"shrimpy\",\n        timestamp: \"12.31\",\n        id: \"shrimpy_7\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"You got just another badge\",\n    status: \"seen\",\n    id: \"channel2\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      },\n      {\n        type: \"image\",\n        author: \"shrimpy\",\n        source: \"https://http.cat/204\",\n        alt: \"cat picture\",\n        timestamp: \"19.56\",\n        id: \"shrimp_img2\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"Yeah!!\",\n    status: \"seen\",\n    id: \"channel3\",\n    content: [\n      {\n        type: \"text\",\n        author: \"shrimpy\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"This is a title\",\n    status: \"read\",\n    id: \"channel4\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"What do you think?\",\n    status: \"read\",\n    id: \"channel5\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"Just another thing\",\n    status: \"read\",\n    id: \"channel6\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"I want to ask something\",\n    status: \"read\",\n    id: \"channel7\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon3\",\n    title: \"This title is loooooo ooooooooooo ooooooooo ooooooo oooooooooooo oong\",\n    status: \"read\",\n    id: \"channel8\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon42\",\n    title: \"Another Title\",\n    status: \"read\",\n    id: \"channel9\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  },\n  {\n    icon: \"userIcon27\",\n    title: \"Title placeholder\",\n    status: \"read\",\n    id: \"channel10\",\n    content: [\n      {\n        type: \"text\",\n        author: \"user\",\n        text: \"Platzhalter\",\n      \ttimestamp: \"19:54\",\n        id: \"platzhalter\"\n      }\n    ]\n  }\n]\n\nclass App extends React.Component{\n  state = {\n    chatBotIsActive: false\n  }\n\n  toggleChatbot = () => {\n    this.setState({chatBotIsActive: !this.state.chatBotIsActive})\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {!this.state.chatBotIsActive ?\n          <Chatbot data={data} toggleChatbot={this.toggleChatbot}/> :\n          <ChatbotButton toggleChatbot={this.toggleChatbot}/>\n        }\n      </div>\n    )\n  }\n}\n\nfunction ChatbotButton (props) {\n  return (\n    <button onClick={props.toggleChatbot}> Enter Chatbot </button>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}